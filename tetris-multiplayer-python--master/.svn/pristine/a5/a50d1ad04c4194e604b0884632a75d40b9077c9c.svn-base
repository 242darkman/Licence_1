from GRILLE import *
from SOLO import *
from MULTJOUEUR import *
from Pieces import *
from pygame.locals import *
import pygame
import sys
import pygame.mixer
pygame.init()

BLACK = 0, 0, 0
WHITE = 255, 255, 255
CIEL = 0, 200, 255
RED = 255, 0, 0
ORANGE = 255, 100, 0
GREEN = 0, 255, 0


class Button:
    '''Ajout d'un bouton avec un texte sur img
    Astuce: ajouter des espaces dans les textes pour avoir une même largeur
    de boutons
    dx, dy décalage du bouton par rapport au centre
    action si click
    Texte noir
    '''

    def __init__(self, fond, text, color, font, dx, dy):
        self.fond = fond
        self.text = text
        self.color = color
        self.font = font
        self.position = dx, dy
        self.action = False  # enable or not
        self.titre = self.font.render(self.text, True, BLACK)
        textpos = self.titre.get_rect()
        textpos.centerx = self.fond.get_rect().centerx + self.position[0]
        textpos.centery = self.position[1]
        self.textpos = [textpos[0], textpos[1], textpos[2], textpos[3]]
        self.rect = pygame.draw.rect(self.fond, self.color, self.textpos)
        self.fond.blit(self.titre, self.textpos)

    def update_button(self, fond, action=None):
        self.fond = fond
        mouse_xy = pygame.mouse.get_pos()
        over = self.rect.collidepoint(mouse_xy)
        if over:
            action()
            if self.color == RED:
                self.color = GREEN
                self.action = True
            elif self.color == GREEN:
                # sauf les + et -, pour que ce soit toujours vert
                if len(self.text) > 5:  # 5 char avec les espaces
                    self.color = RED
                self.action = False
        # à la bonne couleur
        self.rect = pygame.draw.rect(self.fond, self.color, self.textpos)
        self.fond.blit(self.titre, self.textpos)

    def dessiner_boutton(self, fond):
        self.fond = fond
        self.rect = pygame.draw.rect(self.fond, self.color, self.textpos)
        self.fond.blit(self.titre, self.textpos)


class Game:
    def __init__(self):
        self.screen = pygame.display.set_mode((1400, 1000))
        self.m_gameOver = Commande()
        self.loop = True

        # Définition de la police
        self.big = pygame.font.SysFont('baby_blocks.ttf', 150)
        self.small = pygame.font.SysFont('freesans', 36)
        self.normal = pygame.font.SysFont('upheavtt.ttf', 100)

        self.creer_fond()
        self.creer_boutton()
        pygame.display.update()
    def update_textes(self):
        self.textes = [["TETRIS", VERT, self.big, 0, 90]]

    def creer_fond(self):
        # Image de la taille de la fenêtre
        self.fond = pygame.Surface(self.screen.get_size())
        # En bleu
        self.fond.fill(CIEL)

    def creer_boutton(self):
        self.MULTIJOUEUR_button = Button(self.fond, "   MULTIJOUEUR   ", RED, self.normal, 0, 380)
        self.SOLO_button = Button(self.fond, "   SOLO   ", RED, self.normal, 0, 530)
        self.quit_button = Button(self.fond, "   QUITTER   ", RED, self.normal, 0, 680)

    def son(self):
        pygame.init()
        pygame.mixer.music.load("son_turner_teen.oga")        
        pygame.mixer.music.play(-1)
    def display_text(self, text, color, font, dx, dy):
        '''Ajout d'un texte sur fond. Décalage dx, dy par rapport au centre.
        '''
        mytext = font.render(text, True, color)  # True pour antialiasing
        textpos = mytext.get_rect()
        textpos.centerx = self.fond.get_rect().centerx + dx
        textpos.centery = dy
        self.fond.blit(mytext, textpos)

    def lancement_menu(self):
        while self.loop:
            self.creer_fond()
   
            # Boutons
            self.MULTIJOUEUR_button.dessiner_boutton(self.fond)
            self.SOLO_button.dessiner_boutton(self.fond)
            self.quit_button.dessiner_boutton(self.fond)

            for event in pygame.event.get():
                if event.type == pygame.MOUSEBUTTONDOWN:
                    self.MULTIJOUEUR_button.update_button(self.fond, action=MULTIJOUEUR)
                    self.SOLO_button.update_button(self.fond, action=SOLO)
                    self.quit_button.update_button(self.fond, action=gamequit)

            self.update_textes()
            for text in self.textes:
                self.display_text(text[0], text[1], text[2],
                                  text[3], text[4])

            # Ajout du fond dans la fenêtre
            self.screen.blit(self.fond, (0, 0))
            # Actualisation de l'affichage
            # self.fin_de_partie()
            pygame.display.update()
            # 10 fps


def MULTIJOUEUR():
    print("MULTIJOUEUR")
    v=Multijoueur()
    v.Lancement()

def SOLO():
    print("SOLO")
    c = Commande()
    c.Lancement()


def gamequit():
    print("Quit")
    pygame.quit()
    sys.exit()


if __name__ == '__main__':
    game = Game()
    game.lancement_menu()
